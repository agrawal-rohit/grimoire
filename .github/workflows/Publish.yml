name: Publish
on:
  push:
    branches: ["main", "beta"]
  pull_request:
    branches: ["main", "beta", "next"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Begin CI
        uses: actions/checkout@v2

      #----------------------------------------------
      # Setup Node Environment
      #----------------------------------------------
      - name: Use Node 20.x
        uses: actions/setup-node@v2
        with:
          node-version: "20.x"

      #----------------------------------------------
      # Cache modules
      #----------------------------------------------
      - name: Use cached node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: nodeModules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            nodeModules-

      #----------------------------------------------
      # Install Dependencies
      #----------------------------------------------
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      #----------------------------------------------
      # Run unit tests
      #----------------------------------------------
      - name: Test
        run: yarn test

      #--------------------------------------------------
      # Set Repository URL in package.json if not present
      #--------------------------------------------------
      - name: Set repository URL in package.json
        run: |
          REPO_URL=$(git config --get remote.origin.url)
          PACKAGE_REPO=$(cat package.json | jq -r '.repository')
          jq '.repository = env.REPO_URL' package.json > tmp.json && mv tmp.json package.json

      #-----------------------------------------------------------------------------
      # Replace placeholders with repository author id in README and issue templates
      #-----------------------------------------------------------------------------
      - name: Replace placeholders with repository author id
        run: |
          REPO_AUTHOR_ID=$(echo $REPO_URL | cut -d'/' -f4)
          sed -i "s/<github-username>/$REPO_AUTHOR_ID/g" README.md
          sed -i "s/assignees:$/assignees: $REPO_AUTHOR_ID/" .github/ISSUE_TEMPLATE/bug_report.md
          sed -i "s/assignees:$/assignees: $REPO_AUTHOR_ID/" .github/ISSUE_TEMPLATE/feature_request.md

      #------------------------------------------------
      # Commit README, package.json and issue templates if changes exist
      #------------------------------------------------
      - name: Commit README, package.json and issue templates changes
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          git add README.md package.json .github/ISSUE_TEMPLATE/bug_report.md .github/ISSUE_TEMPLATE/feature_request.md
          git diff --quiet || git commit -m "chore(config): Updated README, package.json and issue templates"

  # publish:
  #   if: ${{github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/beta')}}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v2

  #     #----------------------------------------------
  #     # Setup Node Environment
  #     #----------------------------------------------
  #     - name: Use NodeJs 20.x
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 20.x

  #     #----------------------------------------------
  #     # Cache modules
  #     #----------------------------------------------
  #     - name: Use cached node_modules
  #       uses: actions/cache@v1
  #       with:
  #         path: node_modules
  #         key: nodeModules-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           nodeModules-

  #     #----------------------------------------------
  #     # Install dependencies
  #     #----------------------------------------------
  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile

  #     #----------------------------------------------
  #     # Run unit tests
  #     #----------------------------------------------
  #     - name: Test
  #       run: yarn test

  #     #----------------------------------------------
  #     # Store coverage
  #     #----------------------------------------------
  #     - name: Upload coverage to Codacy
  #       uses: codacy/codacy-coverage-reporter-action@1.0.0
  #       with:
  #         # API project token to retrieve your remote Codacy configuration for the project being analyzed
  #         project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
  #         # Optional comma separated list of coverage reports to send to Codacy
  #         coverage-reports: ./coverage/lcov.info

  #     #----------------------------------------------
  #     # Build dist package
  #     #----------------------------------------------
  #     - name: Build
  #       run: yarn build

  #     #----------------------------------------------
  #     # Publish package
  #     #----------------------------------------------
  #     - name: Semantic Release
  #       run: yarn semantic-release
  #       env:
  #         NPM_TOKEN: ${{secrets.NPM_TOKEN}}
  #         GITHUB_TOKEN: ${{secrets.GH_TOKEN}}
